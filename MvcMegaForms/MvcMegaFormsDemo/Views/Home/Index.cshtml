@using MvcMega.Forms.MVC.Html
@model MvcMegaFormsDemo.Models.ComplicatedForm
@{
    ViewBag.Title = "A not-so-simple form!";
}

@section featured {
<section class="featured">
    <div class="content-wrapper">
        <hgroup class="title">
            <h1>@ViewBag.Title.</h1>
        </hgroup>
        <p><strong>MVC Mega Forms</strong> demo - showing scenarios the components can be used in.</p>
    </div>
</section>
}

<h3>A not-so-simple form:</h3>

@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "Please correct the errors and try again.")

    <fieldset>
        <legend>Please fill in the form</legend>
        @*@Html.EditorForModel(Model)*@
        <ol>
            <li class="container">
                @Html.LabelFor(m => m.EqualToInitial)
                @Html.TextBoxFor(m => m.EqualToInitial)
                @Html.ValidationMessageFor(m => m.EqualToInitial)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.EqualToSecond)
                @Html.TextBoxFor(m => m.EqualToSecond)
                @Html.ValidationMessageFor(m => m.EqualToSecond)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.EqualToSecondDisableIfSet)
                @Html.TextBoxFor(m => m.EqualToSecondDisableIfSet)
                @Html.ValidationMessageFor(m => m.EqualToSecondDisableIfSet)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.ShowNextField)
                @Html.CheckBoxFor(m => m.ShowNextField)
                @Html.ValidationMessageFor(m => m.ShowNextField)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.NextField)
                @Html.TextBoxFor(m => m.NextField)
                @Html.ValidationMessageFor(m => m.NextField)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.TestSelectedDropDownItemId)
                @Html.DropDownListFor(m => m.TestSelectedDropDownItemId, Model.AllTestDropDownItems)
                @Html.ValidationMessageFor(m => m.TestSelectedDropDownItemId)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.DropDownOther)
                @Html.TextBoxFor(m => m.DropDownOther)
                @Html.ValidationMessageFor(m => m.DropDownOther)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.TestSelectedMultiSelectItemIds)
                @Html.ListBoxFor(m => m.TestSelectedMultiSelectItemIds, Model.AllTestDropDownItems)
                @Html.ValidationMessageFor(m => m.TestSelectedMultiSelectItemIds)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.MultiSelectOther)
                @Html.TextBoxFor(m => m.MultiSelectOther)
                @Html.ValidationMessageFor(m => m.MultiSelectOther)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.OnlySupplyIfMultiSelectDoesNotContainTwo)
                @Html.TextBoxFor(m => m.OnlySupplyIfMultiSelectDoesNotContainTwo)
                @Html.ValidationMessageFor(m => m.OnlySupplyIfMultiSelectDoesNotContainTwo)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.ParentItemId)
                @Html.DropDownListFor(m => m.ParentItemId, Model.AllParentItems)
                @Html.ValidationMessageFor(m => m.ParentItemId)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.ChildItemId)
                @Html.DropDownChildListFor(m => m.ChildItemId, Model.AllChildItems)
                @Html.ValidationMessageFor(m => m.ChildItemId)
            </li>
            <li class="container">
                @Html.LabelFor(m => m.ChildOfChildItemId)
                @Html.DropDownChildListFor(m => m.ChildOfChildItemId, Model.AllChildOfChildItems)
                @Html.ValidationMessageFor(m => m.ChildOfChildItemId)
            </li>
        </ol>
        @Html.HiddenFor(m=>m.ComplicatedFormId)
        <input type="submit" value="submit" />
    </fieldset>
}
