@using MvcMega.Forms.MVC.Html
@model MvcMega.Forms.WebsiteForTesting.Models.ComplicatedForm
@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "detect-changes" }))
{
    @Html.ValidationSummary(true, "Please correct the errors and try again.")
    <fieldset>
        <legend>Please fill in the form</legend>
        @using (Html.BeginControlGroup())
        {
            @Html.ControlLabelFor(m => m.ShowTheNextHidingField)
            using (Html.BeginControls())
            {
            <label>@Html.RadioButtonFor(m => m.ShowTheNextHidingField, true, new { id = "ShowTheNextHidingFieldTrue" })
                Yes</label>
            <label>@Html.RadioButtonFor(m => m.ShowTheNextHidingField, false, new { id = "ShowTheNextHidingFieldFalse" })
                No</label>
                using (Html.BeginHelpInline())
                {
            @Html.ValidationMessageFor(m => m.ShowTheNextHidingField)
                }
            }
        }
        @Html.ControlBundleFor(m => m.TheNextHidingField)
        @Html.ControlBundleFor(m => m.EnableTheNextDisabledOrHiddenField)
        @Html.ControlBundleFor(m => m.TypeHideToHideOrDisableOrReadonly)
        @Html.ControlBundleFor(m => m.TheNextDisabledOrHiddenField)
        @Html.ControlBundleTextAreaFor(m => m.EqualToInitial)
        @Html.ControlBundleFor(m => m.EqualToSecond)
        @Html.ControlBundleFor(m => m.EqualToSecondDisableIfSet)
        @Html.ControlBundleFor(m => m.ShowNextField)
        @Html.ControlBundleFor(m => m.NextField)
        @Html.ControlBundleDropDownListFor(m => m.TestSelectedDropDownItemId, Model.AllTestDropDownItems)
        @Html.ControlBundleFor(m => m.DropDownOther)
        @Html.ControlBundleListBoxFor(m => m.TestSelectedMultiSelectItemIds, Model.AllTestDropDownItems)
        @Html.ControlBundleFor(m => m.MultiSelectOther)
        @Html.ControlBundleFor(m => m.OnlySupplyIfMultiSelectDoesNotContainTwo)
        @Html.ControlBundleDropDownListFor(m => m.ParentItemId, Model.AllParentItems)
        @Html.ControlBundleDropDownChildListFor(m => m.ChildItemId, Model.AllChildItems)
        @Html.ControlBundleListBoxChildFor(m => m.ChildOfChildItemIds, Model.AllChildOfChildItems)
        @Html.ControlBundleFor(m => m.FirstSubDetails.HasValue)
        @Html.ControlBundleFor(m => m.FirstSubDetails.TheValue)
        @Html.ControlBundleFor(m => m.SecondSubDetails.HasValue)
        @Html.ControlBundleFor(m => m.SecondSubDetails.TheValue)
        @Html.ControlBundleFor(m => m.TimeOfDayForMaskTesting)
        @Html.HiddenFor(m => m.ComplicatedFormId)
        <input type="submit" value="submit" />
    </fieldset>
    <input type="submit" value="Submit Form" />
    <br/>@Html.ActionLink("Navigate back to this page (should detect changes if any)", "Index")
    <br/>@Html.ActionLink("Navigate back to this page (not detecting changes within form)", "Index", null, new { @class = "ignore-detect-changes" })
}
<br/>@Html.ActionLink("Navigate back to this page (not detecting changes outside form)", "Index", null, new { @class = "ignore-detect-changes" })

@section scripts
{
    <script type="text/javascript" src="./../../Scripts/jquery.maskedinput-1.3.min.js"></script>
    <script type="text/javascript">
        $ctrlToMask =  $('#TimeOfDayForMaskTesting');
        $ctrlToMask.mask('99:99', { placeholder: '' });
        
        //Add this line to ensure DetectFormChanges works - need the 'defaultValue' to be the value after masking
        $ctrlToMask.get(0).defaultValue = $ctrlToMask.val();
    </script>
}
